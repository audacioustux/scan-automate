# Default values for openvasd.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Is currently reqired by openvasd to control openvas
ospd:
  repository: greenbone/ospd-openvas
  pullPolicy: Always
  tag: "edge"

# Contains openvasd
openvas:
  repository: greenbone/openvas-scanner
  pullPolicy: Always
  tag: "edge"

# Configuration of openvasd
openvasd: 
  # Sets the log level and changes the verbosity of openvasd.
  # Can be set to TRACE, DEBUG, INFO, WARNING, ERROR
  # openvasd is provided by the openvas image
  loglevel: TRACE
  apikey: changeme
  tls:
    # enables the server-/client-certs deployment via secret 
    # templates/client-certs.yaml
    # templates/server-certs.yaml
    # deplying a client certificate without a server certificate will not have any effect.
    certificates:
      deploy_server: false
      deploy_client: false

# Required for version checks 
notus:
  repository: greenbone/notus-scanner
  pullPolicy: Always
  tag: "edge"

# NASL scripts also known as feed
vulnerabilitytests:
  # latest is the most current community feed.
  repository: greenbone/vulnerability-tests
  pullPolicy: Always
  tag: "latest"

# Notus description json also known as feed
notusdata:
  # latest is the most current community feed.
  repository: greenbone/notus-data
  pullPolicy: Always
  tag: "latest"

# Required by notus
mqtt:
  repository: greenbone/mqtt-broker
  pullPolicy: Always
  tag: "latest"

# required by openvas and ospd
redis:
  repository: greenbone/redis-server
  pullPolicy: Always
  tag: "latest"

# When you have access to the enterprise feed add the credentials for the private repository here.
# Additionally change notus and vulnerabilitytests accordingly.
imagePullSecrets: []
nameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext:
  {}
  # fsGroup: 2000

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  annotations:
    kubernetes.io/ingress.class: "traefik"
  className: "traefik"
  hosts:
    # Captures everything of / delegates it to openvasd although this is not feasible
    # on deployments that contain multiple http services our current deployment model
    # sees a sensor as an own machine.
    # Currently it is configures with http instead of https in mind
    # Do not use it in production environments.
    - paths:
        - path: /
          pathType: ImplementationSpecific 
          backend:
            service:
              name: openvasd
              port:
                number: 80
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local
resources:
  {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}
