version: "3"

tasks:
  default: task --list-all
  ##
  argo:password: echo "Bearer $(kubectl get secret -n argo default.service-account-token -o=jsonpath='{.data.token}' | base64 --decode)"
  argo:port-forward: kubectl port-forward -n argo svc/argo-server 2746:2746
  argocd:password: echo "$(kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 -d)"
  argocd:port-forward: kubectl port-forward svc/argocd-server -n argocd 8080:443
  terraform:init:
    dir: terraform
    cmd: terraform init
  eks:up:
    deps:
      - terraform:init
    dir: terraform
    cmd: terraform apply 
  eks:update-kubeconfig:
    dir: terraform
    cmd: aws eks --region $(terraform output -raw region) update-kubeconfig --name $(terraform output -raw cluster_name)
  ##
  api:build-image:
    cmds:
      - pack build scan-automate-api -b docker.io/paketocommunity/rust -B paketobuildpacks/builder-jammy-base
      - docker tag scan-automate-api tanjim/scan-automate-api:latest
      - docker push tanjim/scan-automate-api:latest
  api:port-forward: kubectl port-forward svc/scan-automate -n scan-automate 4000:80
  ### for development
  api:deps: cargo install systemfd cargo-watch
  api:dev:
    dir: crates/api
    deps: 
      - api:deps
    cmd: systemfd --no-pid -s http::4000 -- cargo watch -x 'run -- --argo-workflow-token dummy'
  api:ui:dev:
    dir: crates/api
    deps: 
      - api:deps
    cmd: cargo watch -x 'run --example client'
  ##
  up: 
    cmd: ./bin/up.sh