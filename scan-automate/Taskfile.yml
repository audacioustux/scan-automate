version: "3"

tasks:
  default: task --list-all
  cf-tunnel:
    vars:
      NS: cloudflared
    cmds:
      - kubectl create ns {{.NS}} --dry-run=client -o yaml | kubectl apply -f -
      - kubectl apply -k k8s/kustomize/cloudflared -n {{.NS}}
      - kubectl create secret generic cloudflare-config --from-literal=TUNNEL_TOKEN=$CLOUDFLARE_TUNNEL_TOKEN --dry-run=client -o yaml | kubectl apply -n {{.NS}} -f -
  argo-password: echo "Bearer $(kubectl get secret -n argo default.service-account-token -o=jsonpath='{.data.token}' | base64 --decode)"
  argocd-password: echo "$(kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 -d)"
  grafana-port-forward: ebort -- kubectl port-forward -n monitoring svc/kube-prometheus-stack-grafana 3000:80 2> /dev/null
  update-kubeconfig:
    dir: terraform
    cmd: aws eks --region $(terraform output -raw region) update-kubeconfig --name $(terraform output -raw cluster_name)
  ###
  api:deps: cargo install systemfd cargo-watch
  api:dev:
    dir: crates/api
    deps: 
      - api:deps
    cmd: systemfd --no-pid -s http::8080 -- cargo watch -x run
  api:build-image: pack build scan-automate-api -b docker.io/paketocommunity/rust -B paketobuildpacks/builder-jammy-base
  ###
  up: 
    deps:
      - api:build-image
    cmd: ./bin/up.sh